name: Deploy Databricks Bundle

on:
  push:
    branches:
      - main
      - master  # Since your default branch is master
  pull_request:
    branches:
      - main
      - master
  workflow_dispatch:  # Allow manual trigger

jobs:
  deploy-dev:
    name: Deploy to Dev Environment
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Databricks CLI
        run: |
          pip install databricks-cli

      - name: Validate Databricks Bundle
        run: |
          databricks bundle validate
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST_DEV }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN_DEV }}

      - name: Deploy to Dev
        run: |
          databricks bundle deploy -t dev
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST_DEV }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN_DEV }}

  deploy-qa:
    name: Deploy to QA Environment
    runs-on: ubuntu-latest
    needs: deploy-dev  # Only run after dev deployment succeeds
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Databricks CLI
        run: |
          pip install databricks-cli

      - name: Validate Databricks Bundle
        run: |
          databricks bundle validate
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST_QA }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN_QA }}

      - name: Deploy to QA
        run: |
          databricks bundle deploy -t qa
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST_QA }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN_QA }}
